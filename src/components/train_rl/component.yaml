# src/components/train_rl/component.yaml
name: train-rl-agent
description: Entrena un agente PPO para filtrar las señales del LSTM.

inputs:
  - {name: params_path,                type: String}
  - {name: rl_data_path,               type: String}
  - {name: pair,                       type: String}
  - {name: timeframe,                  type: String}
  - {name: output_gcs_base_dir,        type: String}
  - {name: tensorboard_logs_base_dir,  type: String}

outputs:
  - {name: trained_rl_model_path,      type: String}

implementation:
  container:
    # Se añade un placeholder para que KFP pueda cargar el componente.
    # El script de la pipeline (main.py) lo sobreescribirá con la imagen real.
    image: placeholder-image
    command:
      - python
      - -m
      - src.components.train_rl.task
    args:
      - --params-path
      - {inputValue: params_path}
      - --rl-data-path
      - {inputValue: rl_data_path}
      - --pair
      - {inputValue: pair}
      - --timeframe
      - {inputValue: timeframe}
      - --output-gcs-base-dir
      - {inputValue: output_gcs_base_dir}
      - --tensorboard-logs-base-dir
      - {inputValue: tensorboard_logs_base_dir}
    fileOutputs:
      trained_rl_model_path: /tmp/trained_rl_model.txt