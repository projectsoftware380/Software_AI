name: train-rl-agent
description: Entrena un agente PPO para filtrar las se침ales del LSTM.

inputs:
  # === AJUSTE: Se a침ade la URI de la imagen como un par치metro de entrada ===
  - name: image_uri
    type: String
    description: 'URI de la imagen Docker a utilizar para ejecutar el componente.'
  # =======================================================================
  - {name: params_path,                type: String}
  - {name: rl_data_path,               type: String}
  - {name: pair,                       type: String}
  - {name: timeframe,                  type: String}
  - {name: output_gcs_base_dir,        type: String}
  - {name: tensorboard_logs_base_dir,  type: String}

outputs:
  - {name: trained_rl_model_path,      type: String}

implementation:
  container:
    # === AJUSTE: La imagen ahora es din치mica y viene de los inputs ===
    image: {inputValue: image_uri}
    # ================================================================
    command:
      - python
      - -m
      - src.components.train_rl.task
    args:
      - --params-path
      - {inputValue: params_path}
      - --rl-data-path
      - {inputValue: rl_data_path}
      - --pair
      - {inputValue: pair}
      - --timeframe
      - {inputValue: timeframe}
      - --output-gcs-base-dir
      - {inputValue: output_gcs_base_dir}
      - --tensorboard-logs-base-dir
      - {inputValue: tensorboard_logs_base_dir}
    fileOutputs:
      trained_rl_model_path: /tmp/trained_rl_model.txt