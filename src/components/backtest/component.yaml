name: Run Final Backtest
description: Runs a final backtest on the hold-out data using the trained LSTM and filter models.

inputs:
  - {name: lstm_model_dir,    type: String, description: "GCS path to the trained LSTM model directory."}
  - {name: filter_model_path, type: String, description: "GCS path to the trained filter model file."}
  - {name: features_path,     type: String, description: "GCS path to the hold-out data Parquet file."}
  # --- AJUSTE AÑADIDO ---
  # Se añaden 'pair' y 'timeframe' para que el componente tenga el contexto completo.
  - {name: pair,              type: String, description: "The currency pair being processed (e.g., 'EURUSD')."}
  - {name: timeframe,         type: String, description: "The timeframe for the data (e.g., '15minute')."}

outputs:
  - {name: output_gcs_dir,       type: String,  description: "GCS directory containing backtest results (metrics.json, trades.csv)."}
  - {name: kfp_metrics_artifact, type: Metrics, description: "KFP Metrics artifact for the Vertex AI UI."}

implementation:
  container:
    image: "gcr.io/your-project/your-image:latest" # Reemplazado por main.py
    command: [
      python, -u, -m, src.components.backtest.task,
      --lstm-model-dir, {inputValue: lstm_model_dir},
      --filter-model-path, {inputValue: filter_model_path},
      --features-path, {inputValue: features_path},
      # --- AJUSTE AÑADIDO ---
      # Se pasan los nuevos parámetros al script.
      --pair, {inputValue: pair},
      --timeframe, {inputValue: timeframe},
      --output-gcs-dir-output, {outputPath: output_gcs_dir},
      --kfp-metrics-artifact-output, {outputPath: kfp_metrics_artifact},
    ]