# src/components/backtest/component.yaml
name: Execute Full Backtesting
description: Runs a full backtest comparing the base (LSTM) and filtered (LSTM+PPO) strategies on unseen data and generates performance metrics.

inputs:
  - name: lstm_model_dir
    type: String
    description: 'The GCS path to the versioned directory of the trained LSTM model.'
  - name: rl_model_path
    type: String
    description: 'The GCS path to the trained PPO model .zip file.'
  - name: features_path
    type: String
    description: 'The GCS path to the unseen features Parquet file for backtesting.'
  - name: pair
    type: String
    description: 'The trading pair being backtested.'
  - name: timeframe
    type: String
    description: 'The timeframe of the data being backtested.'

outputs:
  - name: output_gcs_dir
    type: String
    description: 'The GCS path to the versioned directory containing all backtest results (CSVs, JSON).'
  - name: backtest_metrics
    type: Metrics
    description: 'A KFP Metrics artifact for visualizing key performance indicators in the Vertex AI UI.'

implementation:
  container:
    image: europe-west1-docker.pkg.dev/trading-ai-460823/data-ingestion-repo/data-ingestion-agent:latest
    command:
      - python
      - -m
      - src.components.backtest.task
    args:
      - --lstm-model-dir
      - {inputValue: lstm_model_dir}
      - --rl-model-path
      - {inputValue: rl_model_path}
      - --features-path
      - {inputValue: features_path}
      - --pair
      - {inputValue: pair}
      - --timeframe
      - {inputValue: timeframe}
      - --kfp-metrics-output
      - {outputPath: backtest_metrics}
      - --output-gcs-dir-output
      - {outputPath: output_gcs_dir}