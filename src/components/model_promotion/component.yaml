# src/components/model_promotion/component.yaml
name: model-promotion
description: |
  Decide si el nuevo modelo (LSTM + PPO) debe promoverse a producción
  comparando métricas de back-test con el modelo actual.

inputs:
  - {name: new_metrics_dir,        type: String}
  - {name: new_lstm_artifacts_dir, type: String}
  - {name: new_rl_model_path,      type: String}
  - {name: pair,                   type: String}
  - {name: timeframe,              type: String}
  - {name: production_base_dir,    type: String}

outputs:
  - {name: model_promoted,         type: String, description: "true/false"}

implementation:
  container:
    # Se añade un placeholder para que KFP pueda cargar el componente.
    # El script de la pipeline (main.py) lo sobreescribirá con la imagen real.
    image: placeholder-image
    command:
      - python
      - -m
      - src.components.model_promotion.task
    args:
      - --new-metrics-dir
      - {inputValue: new_metrics_dir}
      - --new-lstm-artifacts-dir
      - {inputValue: new_lstm_artifacts_dir}
      - --new-rl-model-path
      - {inputValue: new_rl_model_path}
      - --pair
      - {inputValue: pair}
      - --timeframe
      - {inputValue: timeframe}
      - --production-base-dir
      - {inputValue: production_base_dir}
    fileOutputs:
      model_promoted: /tmp/model_promoted.txt