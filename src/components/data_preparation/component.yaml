# src/components/data_preparation/component.yaml
name: Prepare Optimization Data
description: Loads raw data, computes indicators, filters for the last N years, and saves the result to be used for hyperparameter optimization.

inputs:
  - name: pair
    type: String
    description: 'The trading pair to process, e.g., EURUSD.'
  - name: timeframe
    type: String
    description: 'The timeframe of the data, e.g., 15minute.'
  - name: years_to_keep
    type: Integer
    description: 'Number of recent years of data to keep for the optimization set.'
    default: 5
  - name: cleanup_old_versions
    type: Boolean
    description: 'If true, old versioned directories will be removed to save space.'
    default: true

outputs:
  - name: prepared_data_path
    type: String
    description: 'The GCS path to the resulting Parquet file, ready for optimization.'

implementation:
  container:
    # Se añade un placeholder para que KFP pueda cargar el componente.
    # El script de la pipeline (main.py) lo sobreescribirá con la imagen real.
    image: placeholder-image
    command:
      - python
      - -m
      - src.components.data_preparation.task
    args:
      - --pair
      - {inputValue: pair}
      - --timeframe
      - {inputValue: timeframe}
      - --years-to-keep
      - {inputValue: years_to_keep}
      - --cleanup
      - {inputValue: cleanup_old_versions}
      - --prepared-data-path-output
      - {outputPath: prepared_data_path}