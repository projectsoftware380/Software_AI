# src/components/train_lstm_launcher/component.yaml
name: launch-vertex-ai-lstm-training-job
description: Ejecuta un CustomJob en Vertex AI que entrena el modelo LSTM.

inputs:
- name: project_id
  type: String
  description: "ID del proyecto GCP"
- name: region
  type: String
  description: "Región (por ejemplo, us-central1)"
- name: pair
  type: String
- name: timeframe
  type: String
- name: params_path
  type: String
  description: "GCS URI al best_params.json"
- name: output_gcs_base_dir
  type: String

# === ESTE ES EL MOTIVO POR EL QUE ESTÁ BIEN ===
# Ya tiene un input para recibir la URI de la imagen.
# El pipeline le pasa la URI a este componente a través de este parámetro.
- name: vertex_training_image_uri
  type: String
# ============================================

- name: vertex_machine_type
  type: String
  default: n1-standard-4
- name: vertex_accelerator_type
  type: String
  default: ACCELERATOR_TYPE_UNSPECIFIED
- name: vertex_accelerator_count
  type: Integer
  default: 0
- name: vertex_service_account
  type: String

outputs:
- name: trained_lstm_dir_path
  type: String

implementation:
  container:
    # Este componente es un "lanzador". La imagen que se define aquí
    # es la que ejecuta el SCRIPT LANZADOR (`task.py`), no el script
    # de entrenamiento en sí. El script lanzador, a su vez, usa el
    # input 'vertex_training_image_uri' para decirle a Vertex AI qué
    # imagen usar para el job de entrenamiento real.
    image: europe-west1-docker.pkg.dev/trading-ai-460823/data-ingestion-repo/data-ingestion-agent:latest
    command:
    - python
    - -m
    - src.components.train_lstm_launcher.task
    args:
    - --project-id
    - {inputValue: project_id}
    - --region
    - {inputValue: region}
    - --pair
    - {inputValue: pair}
    - --timeframe
    - {inputValue: timeframe}
    - --params-path
    - {inputValue: params_path}
    - --output-gcs-base-dir
    - {inputValue: output_gcs_base_dir}
    - --vertex-training-image-uri
    - {inputValue: vertex_training_image_uri} # <--- Lo usa correctamente
    - --vertex-machine-type
    - {inputValue: vertex_machine_type}
    - --vertex-accelerator-type
    - {inputValue: vertex_accelerator_type}
    - --vertex-accelerator-count
    - {inputValue: vertex_accelerator_count}
    - --vertex-service-account
    - {inputValue: vertex_service_account}
    fileOutputs:
      trained_lstm_dir_path: /tmp/trained_dir.txt