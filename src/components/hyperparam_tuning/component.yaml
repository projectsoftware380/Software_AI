# src/components/hyperparam_tuning/component.yaml
name: Optimize LSTM Hyperparameters
description: Uses Optuna to search for the best hyperparameters for the LSTM model, including trading logic and feature engineering parameters.

inputs:
  - name: features_path
    type: String
    description: 'The GCS path to the Parquet file prepared for optimization.'
  - name: pair
    type: String
    description: 'The trading pair to optimize for, e.g., EURUSD.'
  - name: timeframe
    type: String
    description: 'The timeframe of the data, e.g., 15minute.'
  - name: n_trials
    type: Integer
    description: 'The number of optimization trials to run in Optuna.'
    default: 25
  - name: cleanup_old_versions
    type: Boolean
    description: 'If true, old versioned directories for parameters will be removed, keeping only the latest.'
    default: true

outputs:
  - name: best_params_path
    type: String
    description: 'The GCS path to the output best_params.json file.'
  - name: optimization_metrics
    type: Metrics
    description: 'Metrics related to the optimization process, like the best trial score.'

implementation:
  container:
    # La clave 'image' se ha eliminado.
    # Será inyectada en tiempo de ejecución por el script principal de la pipeline (src/pipeline/main.py).
    command:
      - python
      - -m
      - src.components.hyperparam_tuning.task
    args:
      - --features-path
      - {inputValue: features_path}
      - --pair
      - {inputValue: pair}
      - --timeframe
      - {inputValue: timeframe}
      - --n-trials
      - {inputValue: n_trials}
      - --cleanup-old-versions
      - {inputValue: cleanup_old_versions}
      - --best-params-path-output
      - {outputPath: best_params_path}
      - --optimization-metrics-output
      - {outputPath: optimization_metrics}