name: Optimize Trading Logic
description: Runs Optuna hyperparameter optimization for the trading logic (thresholds, etc.).

inputs:
  - {name: features_path,            type: String, description: "GCS path to the training data Parquet file."}
  - {name: architecture_params_file, type: String, description: "GCS path to the best_architecture.json file."}
  - {name: n_trials,                 type: Integer, description: "Number of Optuna trials to run."}
  # --- AJUSTE AÑADIDO ---
  # Se añade 'pair' para que el componente sepa en qué subcarpeta guardar el resultado.
  - {name: pair,                     type: String, description: "The currency pair being processed (e.g., 'EURUSD')."}

outputs:
  - {name: best_params_dir, type: String, description: "GCS directory where the best trading logic parameters JSON is saved."}

implementation:
  container:
    image: "gcr.io/your-project/your-image:latest" # Reemplazado por main.py
    command: [
      python, -m, src.components.optimize_trading_logic.task,
      --features-path, {inputValue: features_path},
      --architecture-params-file, {inputValue: architecture_params_file},
      --n-trials, {inputValue: n_trials},
      # --- AJUSTE AÑADIDO ---
      # Se pasa el nuevo parámetro al script.
      --pair, {inputValue: pair},
      --best-params-dir-output, {outputPath: best_params_dir},
    ]